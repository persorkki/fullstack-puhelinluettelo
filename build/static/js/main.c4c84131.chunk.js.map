{"version":3,"sources":["components/Persons.js","components/PersonForm.js","components/Filter.js","components/Notification.js","services/person.js","App.js","index.js"],"names":["Person","person","personDeleteHandler","name","number","onClick","id","Persons","persons","map","PersonForm","addNewNumber","newName","setNewName","newNumber","setNewNumber","handleInputChange","onSubmit","value","onChange","event","type","Filter","newFilter","setNewFilter","Notification","message","isError","style","color","background","fontSize","borderStyle","borderRadius","padding","marginBottom","baseUrl","input","axios","post","then","res","data","get","response","delete","put","App","useState","setPersons","filtered","setFiltered","infoText","setInfoText","setIsError","setState","target","updateList","personService","catch","error","useEffect","filter","x","toLowerCase","includes","infoSetter","setTimeout","preventDefault","personObject","Date","now","findPerson","find","undefined","concat","window","confirm","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c4c84131.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Persons = ({ persons, personDeleteHandler }) => {\r\n    return (\r\n        <ul>\r\n        {persons.map(person =>\r\n          <Person\r\n            key={person.name}\r\n            person={person}\r\n            personDeleteHandler={personDeleteHandler} />)}\r\n        </ul>\r\n    )\r\n}\r\n\r\nconst Person = ({ person, personDeleteHandler}) => {\r\n  return (\r\n    <li>\r\n      {person.name} {person.number} <button onClick={() => personDeleteHandler(person.id, person.name)}>DELETE</button>\r\n    </li>\r\n    )\r\n}\r\n\r\nexport default Persons","import React from 'react'\r\n\r\nconst PersonForm = ({ addNewNumber, newName, setNewName, newNumber, setNewNumber, handleInputChange }) => {\r\n    return (\r\n      <form onSubmit={addNewNumber}>\r\n        <div>name: <input value={newName} onChange={(event) => handleInputChange(event, setNewName)} /></div>\r\n        <div>number: <input value={newNumber} onChange={(event) => handleInputChange(event, setNewNumber)}/></div>\r\n        <div><button type=\"submit\">add</button></div>\r\n      </form>\r\n    )\r\n  }\r\n\r\nexport default PersonForm","import React from 'react'\r\n\r\nconst Filter = ({ newFilter, handleInputChange, setNewFilter }) => {\r\n    return (\r\n      <div>filter shown\r\n        <input value={newFilter} onChange={(event) => handleInputChange(event, setNewFilter)} />\r\n      </div>\r\n    )\r\n}\r\nexport default Filter","import React from 'react'\r\n\r\nconst Notification = ({ message, isError }) => {\r\n    const errorStyle = {\r\n        color: \"red\",\r\n        background: \"lightgrey\",\r\n        fontSize: 20,\r\n        borderStyle: \"solid\",\r\n        borderRadius: 5,\r\n        padding: 10,\r\n        marginBottom: 10,\r\n    }\r\n    const notificationStyle = {\r\n        color: \"green\",\r\n        background: \"lightgrey\",\r\n        fontSize: 20,\r\n        borderStyle: \"solid\",\r\n        borderRadius: 5,\r\n        padding: 10,\r\n        marginBottom: 10,\r\n    }\r\n\r\n    if (message === null) {\r\n        return null\r\n    }\r\n    return (\r\n        <div style={isError ? errorStyle : notificationStyle}>\r\n            {message}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Notification","import axios from \"axios\"\r\n\r\nconst baseUrl = '/api/persons'\r\n\r\nconst create = (input) => {\r\n    const request =\r\n        axios.post(baseUrl, input)\r\n    return request.then(res => res.data)\r\n}\r\n\r\nconst getAll = () => {\r\n    const request =\r\n        axios.get(baseUrl)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst deletePerson = (id) => {\r\n    const request =\r\n        axios.delete(`${baseUrl}/${id}`)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst update = (id, person) => {\r\n    const request =\r\n        axios.put(`${baseUrl}/${id}`, person)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nexport default { create, getAll, deletePerson, update}","/* dependency imports */\nimport React, { useEffect, useState } from 'react'\n\n/* components */\nimport Persons from './components/Persons'\nimport PersonForm from './components/PersonForm'\nimport Filter from './components/Filter'\nimport Notification from './components/Notification'\n\n/* services */\nimport personService from './services/person'\n\nconst App = () => {\n\n  const [persons, setPersons] = useState([])\n  const [newName, setNewName] = useState('')\n  const [newNumber, setNewNumber] = useState('')\n  const [newFilter, setNewFilter] = useState('')\n  const [filtered, setFiltered] = useState([])\n  const [infoText, setInfoText] = useState(null)\n  const [isError, setIsError] = useState(false)\n\n  const handleInputChange = (event, setState) => {\n    setState(event.target.value)\n  }\n\n  const addNewNumber = (event) => {\n    event.preventDefault()\n    let personObject = {\n      name: newName,\n      number: newNumber,\n      //uniikkeja id:tä jotenkin\n      id: newName + \"_\" + Date.now()\n    }\n\n    /* tarkastetaan onko uusi nimi jo listassa.\n       jos kyllä, niin tarkistetaan haluaako käyttäjä vaihtaa numeron uuteen. \n       jos ei, niin palataan takaisin\n       jos nimeä ei ole listassa, lisätään se sinne */\n\n    const findPerson = persons.find(x => x.name === newName)\n    if (findPerson !== undefined) {\n      if (window.confirm(`${newName} is already added to the phonebook, replace the old number with a new one?`)) {\n        personService\n          .update(findPerson.id, personObject)\n          .then(() => {\n            infoSetter(`Updated ${newName}`)\n            updateList()\n          })\n          .catch(error => {\n            setIsError(true)\n            infoSetter(`${newName} does not exist anymore on the server`)\n            updateList()\n          })\n      }\n      else {\n        infoSetter(`No action was taken`)\n      }\n      return\n    }\n    personService\n      .create(personObject)\n      .then(() =>\n        setPersons(persons.concat(personObject))\n      )\n    infoSetter(`Added ${newName}`)\n    setNewName('')\n    setNewNumber('')\n  }\n\n  const updateList = () => {\n    personService\n      .getAll()\n      .then(response => setPersons(response))\n      .catch(error => {\n        setIsError(true)\n        setInfoText(`error fetching the list`)\n      })\n  }\n\n  //haetaan uusi lista kerran\n  useEffect(() => {\n    personService\n      .getAll()\n      .then(response => setPersons(response))\n      .catch(error => {\n        setIsError(true)\n        setInfoText(`error fetching the list`)\n      })\n  }, [])\n\n  useEffect(() => {\n    setFiltered(persons.filter(x => x.name.toLowerCase().includes(newFilter.toLowerCase())))\n  }, [newFilter, persons])\n\n  //vähennetään duplikaatiota\n  const infoSetter = (message) => {\n    setInfoText(message)\n    setTimeout(() => {\n      setInfoText(null)\n      setIsError(false)\n    }, 3000)\n  }\n\n  const personDeleteHandler = (id, name) => {\n    if (window.confirm(`really delete ${name}?`)) {\n      personService\n        .deletePerson(id)\n        .then(() => updateList())\n        .catch(error => {\n          setIsError(true)\n          setInfoText(`${name} was already deleted from the server`)\n          updateList()\n        })\n      infoSetter(`Deleted ${name}`)\n    }\n  }\n\n  return (\n    <div>\n      <Notification message={infoText} isError={isError} />\n      <h2>Phonebook</h2>\n      <Filter newFilter={newFilter} handleInputChange={handleInputChange} setNewFilter={setNewFilter} />\n      <h3>Add a new</h3>\n      <PersonForm\n        addNewNumber={addNewNumber}\n        newName={newName}\n        setNewName={setNewName}\n        newNumber={newNumber}\n        setNewNumber={setNewNumber}\n        handleInputChange={handleInputChange} />\n      <h3>Numbers</h3>\n      <Persons persons={filtered} personDeleteHandler={personDeleteHandler} />\n    </div>\n  )\n}\n\nexport default App","import ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css'\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);"],"sourceRoot":""}